{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","getAll","fetch","then","response","json","App","useState","setGoods","className","type","onClick","data","catch","Error","sort","a","b","localeCompare","slice","filter","ReactDOM","render","document","getElementById"],"mappings":"sNAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CACLC,MAAOF,EAAKE,OAJhB,SAOGF,EAAKG,MANDH,EAAKI,U,MCNX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICDMC,EAAgB,WAC3B,IACA,EAA0BC,mBADG,IAC7B,mBAAOb,EAAP,KAAcc,EAAd,KAEA,OACE,sBAAKC,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,WACPV,IACGE,MAAK,SAACS,GACLJ,EAASI,MACRC,OAAM,WACP,MAAM,IAAIC,MAAM,uBARxB,4BAeA,wBACEJ,KAAK,SACL,UAAQ,oBACRC,QAAS,WDxBRV,IACJE,MAAK,SAAAT,GACJ,OAAOA,EAAMqB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEjB,KAAKmB,cAAcD,EAAElB,SAChDoB,MAAM,EAAG,MCuBLhB,MAAK,SAACS,GACLJ,EAASI,MACRC,OAAM,WACP,MAAM,IAAIC,MAAM,uBARxB,gCAeA,wBACEJ,KAAK,SACL,UAAQ,aACRC,QAAS,WD/BRV,IACJE,MAAK,SAAAT,GACJ,OAAOA,EAAM0B,QAAO,SAACxB,GAAD,MAAyB,QAAfA,EAAKE,SAChCqB,MAAM,EAAG,MC8BLhB,MAAK,SAACS,GACLJ,EAASI,MACRC,OAAM,WACP,MAAM,IAAIC,MAAM,uBARxB,4BAeA,cAAC,EAAD,CAAWpB,MAAOA,QC3DxB2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e0096693.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{\n          color: good.color,\n        }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => {\n      return goods.sort((a, b) => a.name.localeCompare(b.name))\n        .slice(0, 5);\n    }); // sort and get the first 5\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => {\n      return goods.filter((good) => good.color === 'red')\n        .slice(0, 5);\n    }); // get only red\n};\n","import React, { useState } from 'react';\nimport { Good } from './types/Good';\nimport { GoodsList } from './GoodsList';\nimport './App.scss';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n// or\n// import * as goodsAPI from './api/goods';\n\nexport const App: React.FC = () => {\n  const goodsInitial: Good[] = [];\n  const [goods, setGoods] = useState(goodsInitial);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => {\n          getAll()\n            .then((data) => {\n              setGoods(data);\n            }).catch(() => {\n              throw new Error('Error, sorry :(');\n            });\n        }}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => {\n          get5First()\n            .then((data) => {\n              setGoods(data);\n            }).catch(() => {\n              throw new Error('Error, sorry :(');\n            });\n        }}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => {\n          getRedGoods()\n            .then((data) => {\n              setGoods(data);\n            }).catch(() => {\n              throw new Error('Error, sorry :(');\n            });\n        }}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n//\n"],"sourceRoot":""}